@2024-05-07
@19:51 Initial GestVM import
attempting to import just the things I need from mnolth.
@19:55 things build except for memops, uses lua
memops does not want to build because I think I added
some lua in there.

As a matter of fact, there's also LIL in there as well,
which shouldn't have built either. But, I realize that
LIL is included in the sndkit distro at the moment. I'll
leave it be for now, but it's going to be dead code in
Orphium.
@19:56 TODO revisit memops
memops I think is all the code responsible for getting
TAL code compiled down to uxn byte code. Right now it
won't compile cuz it relies on the Lua C API.

How hard will it be to remove Lua and get the functionality
we want?

In the long run, it'd be nice to use Konilo to metaprogram
Uxn byte code. Reason for this is it'd integrate better
with Konilo. Also, I think it would allow for more fly-by
one-off gestures. But this might end up being more
trouble than it is worth.

@2024-05-08
@15:34 Try to get core memops C API to compile
the memops stuff is mostly in C, with helper functions
in LIL and Lua. At the very least, I'm going to try and
get things to compile.

@15:42 Try to find good hello world example for gestvm
I need to find something that showcases a gesture path,
like a gesture controlling frequency. This will be something
I will eventually be able to write using Konilo forth.

@15:59 Work out Konilo Pseudo-code
I seem to have a "simple path" example in the gestlings
repo that I think I can turn into a Konilo program.
There's a lot I have to build out for it to actually
work, but I'm pretty sure I can imagine most of the
program structure.

@16:31 Pseudo-forth written in Unu. Next steps.
Unu is a helpful way to articulate my thoughts, and
since we have the retro-uno program why not.

Next steps will involve implementing all the words that
don't exist, which will include getting a working in-memory
Tal assembler working.

@2024-05-09
@19:42 Get an instance of GestVM inside ilo
Just want to see it get initialized.
@19:49 Okay that was easy, now to think about the memops

